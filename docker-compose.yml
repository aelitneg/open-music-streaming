version: '3.8'

services:
  postgres:
    image: postgres:18
    container_name: postgres
    environment:
      POSTGRES_DB: open_music_streaming
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/18/docker
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d open_music_streaming"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: builder
    container_name: server
    command: npm run dev
    ports:
      - "3000:3000"
    volumes:
      - ./server/src:/app/src
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - |
          node -e "
            require('http')
              .get('http://localhost:3000/healthcheck', (r) => {
                process.exit(r.statusCode === 200 ? 0 : 1)
              })
              .on('error', () => process.exit(1))
          "
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
